{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "projectPrefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix for all resources created for the project (except storage account, see below). Should be in the format dfc-env-proj"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the project storage account (as it follows a different naming convention)"
      }
    },
    "appServicePlanSize": {
      "type": "string",
      "defaultValue": "1",
      "metadata": {
          "description": "Size of the instances in the app service plan"
      },
      "allowedValues": [
        "1",
        "2",
        "3"
      ]
    },
    "appServicePlanInstances": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
          "description": "Number of instances in the app service plan"
      }
    }
  },
  "variables": {
    "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
    "appServicePlanName": "[concat(parameters('projectPrefix'),'-asp')]",
    "cosmosDbName": "[concat(parameters('projectPrefix'),'-cdb')]",
    "azureSearchName": "[concat(parameters('projectPrefix'),'-sch')]"
  },
  "resources": [
    {
      "apiVersion": "2017-05-10",
      "name": "providerPortalAppServicePlan",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-plan.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServicePlanName": {
            "value": "[variables('appServicePlanName')]"
          },
          "aspSize": {
            "value": "[parameters('appServicePlanSize')]"
          },
          "aspInstances": {
            "value": "[parameters('appServicePlanInstances')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "providerPortalCosmos",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'cosmos-db.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "cosmosDbName": {
            "value": "[variables('cosmosDbName')]"
          },
          "cosmosDbType": {
            "value": "GlobalDocumentDB"
          },
          "defaultConsistencyLevel": {
            "value": "Eventual"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "providerPortalStorage",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'storage-account-arm.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "providerPortalSearch",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'azure-search.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "azureSearchName": {
            "value": "[variables('azureSearchName')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "storageConnectionString": {
      "type": "string",
      "value": "[reference('providerPortalStorage').outputs.storageConnectionString.value]"
    },
    "appServicePlanName": {
      "type": "string",
      "value": "[variables('appServicePlanName')]"
    },
    "cosmosDbName": {
      "type": "string",
      "value": "[variables('cosmosDbName')]"
    },
    "azureSearchName": {
      "type": "string",
      "value": "[variables('azureSearchName')]"
    }
  }
}